{"version":3,"sources":["components/GameBoard/ImageContainer.js","components/GameBoard/Image.js","components/GameBoard/ImageTitle.js","components/GameBoard/GameBoard.js","lib/imagesPool.js","components/NavBar/NavBarContainer.js","components/NavBar/NavTitle.js","components/NavBar/ScoreBoard.js","components/NavBar/NavBar.js","lib/suffingArray.js","App.js","index.js"],"names":["ImageContainer","styled","div","Image","src","onImageClickHanlder","imageID","alt","onClick","data-id","Title","p","GameBoard","imagesPool","id","name","NavBarContainer","nav","NavTitle","ScoreBoard","NavBar","score","highScore","suffingArray","arr","suffedArray","arrLength","length","r","Math","floor","random","indexOf","push","App","React","useState","setHighScore","clickedImages","setClickedImages","images","setImages","event","includes","target","dataset","prevClickedImages","concat","prevImages","useEffect","map","image","process","ImageTitle","ReactDOM","render","document","getElementById"],"mappings":"wLAmBeA,EAjBQC,IAAOC,IAAV,oW,OCILC,I,UAAAA,EANf,YAAuD,IAAtCC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,oBAAqBC,EAAW,EAAXA,QACzC,OACE,qBAAKF,IAAKA,EAAKG,IAAI,GAAGC,QAASH,EAAqBI,UAASH,KCOlDI,EAPDT,IAAOU,EAAV,+GCQIC,EARGX,IAAOC,IAAV,2ICaAW,EAfI,CACjB,CAAEC,GAAI,EAAGC,KAAM,UAAWX,IAAK,eAC/B,CAAEU,GAAI,EAAGC,KAAM,WAAYX,IAAK,gBAChC,CAAEU,GAAI,EAAGC,KAAM,mBAAoBX,IAAK,wBACxC,CAAEU,GAAI,EAAGC,KAAM,YAAaX,IAAK,iBACjC,CAAEU,GAAI,EAAGC,KAAM,UAAWX,IAAK,eAC/B,CAAEU,GAAI,EAAGC,KAAM,YAAaX,IAAK,iBACjC,CAAEU,GAAI,EAAGC,KAAM,UAAWX,IAAK,eAC/B,CAAEU,GAAI,EAAGC,KAAM,UAAWX,IAAK,eAC/B,CAAEU,GAAI,EAAGC,KAAM,YAAaX,IAAK,iBACjC,CAAEU,GAAI,EAAGC,KAAM,YAAaX,IAAK,iBACjC,CAAEU,GAAI,GAAIC,KAAM,YAAaX,IAAK,iBAClC,CAAEU,GAAI,GAAIC,KAAM,aAAcX,IAAK,mBCEtBY,EAZSf,IAAOgB,IAAV,uNCQNC,EAREjB,IAAOU,EAAV,qICMCQ,EANIlB,IAAOC,IAAV,0FCwBDkB,EAtBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAV,OACb,eAAC,EAAD,WACE,cAAC,EAAD,0BACA,cAAC,EAAD,UACE,gCACE,kCACE,+BACE,uCACA,mCACA,6BAAKD,OAEP,+BACE,4CACA,mCACA,6BAAKC,kB,gBCRFC,EAVM,SAACC,GAGpB,IAFA,IAAMC,EAAc,GACdC,EAAYF,EAAIG,OACfF,EAAYE,OAASD,GAAW,CACrC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,SAAWL,IACE,IAAjCD,EAAYO,QAAQR,EAAII,KAAYH,EAAYQ,KAAKT,EAAII,IAE/D,OAAOH,GC2CMS,EAzCH,WAAO,IAAD,EACkBC,IAAMC,SAAS,GADjC,mBACTd,EADS,KACEe,EADF,OAE0BF,IAAMC,SAAS,IAFzC,mBAETE,EAFS,KAEMC,EAFN,OAGYJ,IAAMC,SAASvB,GAH3B,mBAGT2B,EAHS,KAGDC,EAHC,KAKVpC,EAAsB,SAACqC,GACtBJ,EAAcK,SAASD,EAAME,OAAOC,QAAQ/B,IAK/CyB,EAAiB,IAJjBA,GAAiB,SAACO,GAAD,OACfA,EAAkBC,OAAOL,EAAME,OAAOC,QAAQ/B,OAKlD2B,GAAU,SAACO,GAAD,OAAgBzB,EAAayB,OASzC,OANAb,IAAMc,WAAU,WACV3B,EAAYgB,EAAcX,QAC5BU,EAAaC,EAAcX,UAE5B,CAACW,EAAcX,OAAQL,IAGxB,qCACE,cAAC,EAAD,CAAQD,MAAOiB,EAAcX,OAAQL,UAAWA,IAChD,cAAC,EAAD,UACGkB,EAAOU,KAAI,SAACC,GAAD,OACV,eAAC,EAAD,WACE,cAAC,EAAD,CACE/C,IAAKgD,sBAAqCD,EAAM/C,IAChDC,oBAAqBA,EACrBC,QAAS6C,EAAMrC,KAEjB,cAACuC,EAAD,UAAaF,EAAMpC,SANAoC,EAAMrC,a,YC/BrCwC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b29709fe.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst ImageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 0;\n  background-color: #ebf2ed;\n  max-width: 250px;\n  padding: 10px;\n  margin: 20px;\n  border-radius: 5px;\n  box-shadow: 5px 5px 10px 5px #888;\n  cursor: pointer;\n  :hover {\n    transition: all 0.2s ease-in-out;\n    box-shadow: 10px 10px 20px 10px #888;\n  }\n`;\n\nexport default ImageContainer;\n","function Image({ src, onImageClickHanlder, imageID }) {\n  return (\n    <img src={src} alt=\"\" onClick={onImageClickHanlder} data-id={imageID} />\n  );\n}\n\nexport default Image;\n","import styled from \"styled-components\";\n\nconst Title = styled.p`\n  color: #222;\n  font-weight: bold;\n  font-size: 1.5rem;\n  text-align: center;\n`;\n\nexport default Title;\n","import styled from \"styled-components\";\n\nconst GameBoard = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 70px;\n`;\n\nexport default GameBoard;\n","const imagesPool = [\n  { id: 0, name: \"Aurorus\", src: \"aurorus.png\" },\n  { id: 1, name: \"Cobalion\", src: \"cobalion.png\" },\n  { id: 2, name: \"Aegislash Shield\", src: \"aegislash_shield.png\" },\n  { id: 3, name: \"Dragonite\", src: \"dragonite.png\" },\n  { id: 4, name: \"Flapple\", src: \"flapple.png\" },\n  { id: 5, name: \"Honchkrow\", src: \"honchkrow.png\" },\n  { id: 6, name: \"Kingler\", src: \"kingler.png\" },\n  { id: 7, name: \"Pangoro\", src: \"pangoro.png\" },\n  { id: 8, name: \"Regidrago\", src: \"regidrago.png\" },\n  { id: 9, name: \"Rhyperior\", src: \"rhyperior.png\" },\n  { id: 10, name: \"Sirfetchd\", src: \"sirfetchd.png\" },\n  { id: 11, name: \"Victreebel\", src: \"victreebel.png\" },\n];\n\nexport default imagesPool;\n","import styled from \"styled-components\";\n\nconst NavBarContainer = styled.nav`\n  height: 50px;\n  padding: 10px;\n  background-color: #222;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport default NavBarContainer;\n","import styled from \"styled-components\";\n\nconst NavTitle = styled.p`\n  color: whitesmoke;\n  font-size: 700;\n  font-weight: bold;\n  font-size: 30px;\n  margin-left: 20px;\n`;\n\nexport default NavTitle;\n","import styled from \"styled-components\";\n\nconst ScoreBoard = styled.div`\n  color: whitesmoke;\n  width: 120px;\n  margin-right: 30px;\n`;\n\nexport default ScoreBoard;\n","import NavBarContainer from \"./NavBarContainer\";\nimport NavTitle from \"./NavTitle\";\nimport ScoreBoard from \"./ScoreBoard\";\n\nconst NavBar = ({ score, highScore }) => (\n  <NavBarContainer>\n    <NavTitle>Memory Card</NavTitle>\n    <ScoreBoard>\n      <table>\n        <tbody>\n          <tr>\n            <td>Score</td>\n            <td>:</td>\n            <td>{score}</td>\n          </tr>\n          <tr>\n            <td>High score</td>\n            <td>:</td>\n            <td>{highScore}</td>\n          </tr>\n        </tbody>\n      </table>\n    </ScoreBoard>\n  </NavBarContainer>\n);\n\nexport default NavBar;\n","const suffingArray = (arr) => {\n  const suffedArray = [];\n  const arrLength = arr.length;\n  while (suffedArray.length < arrLength) {\n    let r = Math.floor(Math.random() * arrLength);\n    if (suffedArray.indexOf(arr[r]) === -1) suffedArray.push(arr[r]);\n  }\n  return suffedArray;\n};\n\nexport default suffingArray;\n","import ImageContainer from \"./components/GameBoard/ImageContainer\";\nimport Image from \"./components/GameBoard/Image\";\nimport ImageTitle from \"./components/GameBoard/ImageTitle\";\nimport GameBoard from \"./components/GameBoard/GameBoard\";\nimport imagesPool from \"./lib/imagesPool\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport React from \"react\";\nimport suffingArray from \"./lib/suffingArray\";\n\nconst App = () => {\n  const [highScore, setHighScore] = React.useState(0);\n  const [clickedImages, setClickedImages] = React.useState([]);\n  const [images, setImages] = React.useState(imagesPool);\n\n  const onImageClickHanlder = (event) => {\n    if (!clickedImages.includes(event.target.dataset.id)) {\n      setClickedImages((prevClickedImages) =>\n        prevClickedImages.concat(event.target.dataset.id)\n      );\n    } else {\n      setClickedImages([]);\n    }\n    setImages((prevImages) => suffingArray(prevImages));\n  };\n\n  React.useEffect(() => {\n    if (highScore < clickedImages.length) {\n      setHighScore(clickedImages.length);\n    }\n  }, [clickedImages.length, highScore]);\n\n  return (\n    <>\n      <NavBar score={clickedImages.length} highScore={highScore}></NavBar>\n      <GameBoard>\n        {images.map((image) => (\n          <ImageContainer key={image.id}>\n            <Image\n              src={process.env.PUBLIC_URL + \"images/\" + image.src}\n              onImageClickHanlder={onImageClickHanlder}\n              imageID={image.id}\n            />\n            <ImageTitle>{image.name}</ImageTitle>\n          </ImageContainer>\n        ))}\n      </GameBoard>\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}